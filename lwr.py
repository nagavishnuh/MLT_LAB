# -*- coding: utf-8 -*-
"""LWR

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PvhYeVLEYjIcij72tAS6VQP_U8HFOWAO
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("tips.csv")
bill = data.total_bill
tip = data.tip

mBill = np.mat(bill)
mTip = np.mat(tip)
m = mBill.shape[1]
one = np.mat(np.ones(m))
X = np.hstack((one.T, mBill.T))

def kernel(point,xmat,k):
  m,n = xmat.shape
  weights = np.mat(np.eye(m))
  for j in range(m):
    diff = point - xmat[j]
    weights[j,j] = np.exp(diff*diff.T/(-2*k**2))
  return weights

def Beta(x_value,x,y,k):
  weight = kernel(x_value,x,k)
  W = (X.T * (weight * X)).I*(X.T *(weight * y.T))
  return W

def localWeightRegression(x,y,k):
  m,n = x.shape
  ypred = np.zeros(m)
  for i in range(m):
    ypred[i] = x[i] * Beta(x[i],x,y,k)
  return ypred

ypred = localWeightRegression(X,mTip,2)
SortIndex = X[:,1].argsort(0)
xsort = X[SortIndex][:,0]

plt.figure()
plt.scatter(bill,tip,color='blue')
plt.plot(xsort[:,1],ypred[SortIndex],color='red',linewidth = 2)